{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Delete Python Build Folder",
            "type": "shell",
            "linux": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/build"
                ]
            },
            "osx": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/build"
                ]
            },
            "windows": {
                "command": "Remove-Item",
                "args": [
                    "-Recurse",
                    "-Force",
                    "-Path",
                    "${workspaceFolder}\\build"
                ]
            }
        },
        {
            "label": "Delete Python Distribution Folder",
            "type": "shell",
            "linux": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/dist"
                ]
            },
            "osx": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/dist"
                ]
            },
            "windows": {
                "command": "Remove-Item",
                "args": [
                    "-Recurse",
                    "-Force",
                    "-Path",
                    "${workspaceFolder}\\dist"
                ]
            }
        },
        {
            "label": "Delete Blender Build Folder",
            "type": "shell",
            "linux": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/Blender/build"
                ]
            },
            "osx": {
                "command": "rm",
                "args": [
                    "-Rf",
                    "${workspaceFolder}/Blender/build"
                ]
            },
            "windows": {
                "command": "Remove-Item",
                "args": [
                    "-Recurse",
                    "-Force",
                    "-Path",
                    "${workspaceFolder}\\Blender\\build"
                ]
            }
        },
        {
            "label": "Clean Blender Build Folder",
            "dependsOn": [
                "Delete Blender Build Folder",
                "Make Blender Build Folder"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Python - Build Local Wheel File From Sources",
            "type": "shell",
            "command": "${config:python.pythonPath}",
            "args": [
                "setup.py",
                "bdist_wheel"
            ],
            "dependsOn": [
                "Delete Python Build Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Build Source Distribution",
            "type": "shell",
            "command": "${config:python.pythonPath}",
            "args": [
                "setup.py",
                "sdist"
            ],
            "dependsOn": [
                "Delete Python Build Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Build Local Wheel File From Prebuilt Binaries",
            "type": "shell",
            "linux": {
                "command": "${config:python.pythonPath}",
                "args": [
                    "setup.py",
                    "bdist_wheel",
                    "--bpy-prebuilt=${workspaceFolder}/Blender/build/linux/bin/"
                ]
            },
            "osx": {
                "command": "${config:python.pythonPath}",
                "args": [
                    "setup.py",
                    "bdist_wheel",
                    "--bpy-prebuilt=${workspaceFolder}/Blender/build/darwin/bin/"
                ]
            },
            "windows": {
                "command": "${config:python.pythonPath}",
                "args": [
                    "setup.py",
                    "bdist_wheel",
                    "--bpy-prebuilt=${workspaceFolder}/Blender/build/windows/bin/Release"
                ]
            },
            "dependsOn": [
                "Delete Python Build Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Twine Upload to PyPI",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "twine",
                "upload",
                "${workspaceFolder}/dist/*"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Twine Upload to PyPI [TEST]",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "twine",
                "upload",
                "--repository",
                "pypitest",
                "${workspaceFolder}/dist/*"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Publish to PyPI",
            "dependsOn": [
                "Python - Twine Upload to PyPI",
                "Delete Python Distribution Folder"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Python - Publish to PyPI [TEST]",
            "dependsOn": [
                "Python - Twine Upload to PyPI",
                "Delete Python Distribution Folder"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Python - Upgrade pip",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "-U",
                "pip"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Install Dependencies",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "-r",
                "${workspaceFolder}/requirements.txt"
            ],
            "dependsOn": [
                "Python - Upgrade pip"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Install Custom bpy",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "${workspaceFolder}",
                "--global-option=\"build_ext\"",
                "--global-option=\"--bpy-prebuilt=${input:PrebuiltBinariesDirectory}\"",
                "-v"
            ],
            "dependsOn": [
                "Delete Python Build Folder"
            ]
        },
        {
            "label": "Make Blender Libs Folder",
            "type": "shell",
            "linux": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/Blender/lib"
                ]
            },
            "osx": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/Blender/lib"
                ]
            },
            "windows": {
                "command": "New-Item",
                "args": [
                    "-ItemType",
                    "Directory",
                    "-Force",
                    "-Path",
                    "${workspaceFolder}\\Blender\\lib",
                    "|",
                    "Out-Null"
                ]
            },
            "problemMatcher": []
        },
        {
            "label": "Make Blender Build Folder",
            "type": "shell",
            "linux": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/Blender/build/linux"
                ]
            },
            "osx": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/Blender/build/darwin"
                ]
            },
            "windows": {
                "command": "New-Item",
                "args": [
                    "-ItemType",
                    "Directory",
                    "-Force",
                    "-Path",
                    "${workspaceFolder}\\Blender\\build\\windows",
                    "|",
                    "Out-Null"
                ]
            },
            "problemMatcher": []
        },
        {
            "label": "Make OptiX Folder",
            "type": "shell",
            "linux": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/OptiX"
                ]
            },
            "osx": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/OptiX"
                ]
            },
            "windows": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/OptiX"
                ]
            },
            "problemMatcher": []
        },
        {
            "label": "Browser - Get OptiX [Requires Registration]",
            "type": "shell",
            "linux": {
                "command": "open",
                "args": [
                    "https://developer.nvidia.com/designworks/optix/download"
                ]
            },
            "osx": {
                "command": "open",
                "args": [
                    "https://developer.nvidia.com/designworks/optix/download"
                ]
            },
            "windows": {
                "command": "start",
                "args": [
                    "https://developer.nvidia.com/designworks/optix/download"
                ]
            },
            "dependsOn": [
                "Make OptiX Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Git - Initialize Submodules",
            "type": "process",
            "command": "git",
            "args": [
                "submodule",
                "update",
                "--init",
                "--recursive"
            ],
            "dependsOn": [
                "Make Blender Libs Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Git - Fetch Blender Commits",
            "type": "process",
            "command": "git",
            "args": [
                "fetch"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender/blender"
            },
            "problemMatcher": []
        },
        {
            "label": "Git - Merge Blender Commits",
            "type": "process",
            "command": "git",
            "args": [
                "merge"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender/blender"
            },
            "problemMatcher": []
        },
        {
            "label": "Git - Checkout Blender Tag",
            "type": "process",
            "command": "git",
            "args": [
                "checkout",
                "tags/${input:BfGitTag}",
                "-b",
                "origin/master"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender/blender"
            },
            "dependsOn": [
                "Git - Fetch Blender Commits"
            ],
            "problemMatcher": []
        },
        {
            "label": "Git - Checkout Blender Master",
            "type": "process",
            "command": "git",
            "args": [
                "checkout",
                "master"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender/blender"
            },
            "dependsOn": [
                "Git - Fetch Blender Commits"
            ],
            "problemMatcher": []
        },
        {
            "label": "Git - Switch To Blender Master [Checkout & Pull]",
            "dependsOn": [
                "Git - Checkout Blender Master",
                "Git - Merge Blender Commits"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Update Blender Sources [Checks out master branch]",
            "type": "shell",
            "command": "./make",
            "args": [
                "update"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender/blender"
            },
            "dependsOn": [
                "Git - Checkout Blender Master"
            ],
            "problemMatcher": []
        },
        {
            "label": "SVN - Checkout Blender Precompiled Libs Trunk",
            "type": "process",
            "command": "svn",
            "linux": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/trunk/lib/linux_centos7_x86_64/"
                ]
            },
            "osx": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/trunk/lib/darwin/"
                ]
            },
            "windows": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/trunk/lib/${input:BfSvnTrunkNTPlatform}"
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}/Blender/lib"
            },
            "dependsOn": [
                "Make Blender Libs Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "SVN - Checkout Blender Precompiled Libs Tag",
            "type": "process",
            "command": "svn",
            "linux": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/tags/${input:BfSvnTag}lib/linux_centos7_x86_64/"
                ]
            },
            "osx": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/tags/${input:BfSvnTag}lib/darwin/"
                ]
            },
            "windows": {
                "args": [
                    "checkout",
                    "https://svn.blender.org/svnroot/bf-blender/tags/${input:BfSvnTag}lib/${input:BfSvnTagNTPlatform}"
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}/Blender/lib"
            },
            "dependsOn": [
                "Make Blender Libs Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "First Time - Git & SVN Checkout",
            "dependsOn": [
                "Git - Initialize Submodules",
                "Update Blender Sources [Checks out master branch]"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Configure",
            "type": "shell",
            "linux": {
                "command": "cmake ${workspaceFolder}/Blender/blender -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON -DWITH_CYCLES_CUDA_BINARIES=ON -DWITH_CYCLES_DEVICE_OPTIX=ON -DOPTIX_ROOT_DIR=/NVIDIA-OptiX-SDK-7.1.0-linux64-x86_64",
                "options": {
                    "cwd": "${workspaceFolder}/Blender/build/linux"
                }
            },
            "osx": {
                "command": "cmake ${workspaceFolder}/Blender/blender -DWITH_OPENMP=OFF -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON",
                "options": {
                    "cwd": "${workspaceFolder}/Blender/build/darwin"
                }
            },
            "windows": {
                "command": "cmake ${workspaceFolder}\\Blender\\blender -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON -DWITH_CYCLES_CUDA_BINARIES=ON -DWITH_CYCLES_DEVICE_OPTIX=ON -DWITH_WINDOWS_BUNDLE_CRT=OFF",
                "options": {
                    "cwd": "${workspaceFolder}\\Blender\\build\\windows"
                }
            },
            "dependsOn": [
                "Make Blender Build Folder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "shell",
            "linux": {
                "command": "./make",
                "args": [
                    "-j$((`nproc`+1))",
                    "install"
                ],
                "options": {
                    "cwd": "${workspaceFolder}/Blender/build/linux"
                }
            },
            "osx": {
                "command": "./make",
                "args": [
                    "-j$((`nproc`+1))",
                    "install"
                ],
                "options": {
                    "cwd": "${workspaceFolder}/Blender/build/darwin"
                }
            },
            "windows": {
                "command": "cmake",
                "args": [
                    "--build",
                    ".",
                    "--target",
                    "INSTALL",
                    "--config",
                    "Release"
                ],
                "options": {
                    "cwd": "${workspaceFolder}\\Blender\\build\\windows"
                }
            },
            "dependsOn": [
                "Configure"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build Manylinux Wheels [Requires Docker]",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "up",
                "--build",
                "blenderpy-manylinux-wheel-builder"
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Full Clean",
            "type": "process",
            "command": "docker",
            "args": [
                "system",
                "prune",
                "--all",
                "--force",
                "--volumes"
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Create Manylinux Wheel Build Environment",
            "type": "process",
            "command": "docker",
            "args": [
                "build",
                "--target",
                "blenderpy-manylinux-wheel-builder",
                "-t",
                "blenderpy/manylinux-wheel-builder",
                "-f",
                "${workspaceFolder}/.containers/Dockerfile",
                "."
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Create Windows Wheel Build Environment",
            "type": "process",
            "command": "docker",
            "args": [
                "build",
                "--target",
                "blenderpy-windows-wheel-builder",
                "-t",
                "blenderpy/windows-wheel-builder",
                "-f",
                "${workspaceFolder}/.containers/Dockerfile",
                "."
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete All Containers & Volumes",
            "type": "shell",
            "command": "docker rm -vf $(docker ps -a -q)",
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete All Images",
            "type": "shell",
            "command": "docker rmi -f $(docker images -a -q)",
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete EVERYTHING",
            "type": "shell",
            "dependsOn": [
                "Docker - Delete All Containers & Volumes",
                "Docker - Delete All Images"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "BfGitTag",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "cd Blender/blender && git tag"
            }
        },
        {
            "id": "BfSvnTag",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "svn ls https://svn.blender.org/svnroot/bf-blender/tags/"
            }
        },
        {
            "id": "BfSvnTrunkNTPlatform",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "svn ls https://svn.blender.org/svnroot/bf-blender/trunk/lib/ | findstr \"^win\""
            }
        },
        {
            "id": "BfSvnTagNTPlatform",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "svn ls https://svn.blender.org/svnroot/bf-blender/tags/${input:BfSvnTag}lib/ | findstr \"^win\""
            }
        },
        {

            "id": "PrebuiltBinariesDirectory",
            "type": "promptString",
            "description": "The location of the built blender binaries"
        }
    ]
}