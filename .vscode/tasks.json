{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Python - Publish to PyPI",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "twine",
                "upload",
                "${workspaceFolder}/dist/*"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Publish to PyPI [TEST]",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "twine",
                "upload",
                "--repository",
                "pypitest",
                "${workspaceFolder}/dist/*"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Upgrade pip",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "-U",
                "pip"
            ],
            "problemMatcher": []
        },
        {
            "label": "Python - Install Dependencies",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "-r",
                "${workspaceFolder}/requirements.txt"
            ],
            "dependsOn": [
                "Python - Upgrade pip"
            ],
            "problemMatcher": []
        },
        {
            "label": "Make Blender Folder",
            "type": "shell",
            "linux": {
                "command": "mkdir -p ${workspaceFolder}/Blender"
            },
            "osx": {
                "command": "mkdir -p ${workspaceFolder}/Blender"
            },
            "windows": {
                "command": "mkdir -p ${workspaceFolder}/Blender"
            },
            "problemMatcher": []
        },
        {
            "label": "Make Build Folders",
            "type": "shell",
            "linux": {
                "command": "mkdir -p ${workspaceFolder}/build/linux"
            },
            "osx": {
                "command": "mkdir -p ${workspaceFolder}/build/osx"
            },
            "windows": {
                "command": "mkdir -p ${workspaceFolder}/build/windows"
            },
            "problemMatcher": []
        },
        {
            "label": "Make OptiX Folder",
            "type": "shell",
            "linux": {
                "command": "mkdir -p ${workspaceFolder}/OptiX"
            },
            "osx": {
                "command": "mkdir -p ${workspaceFolder}/OptiX"
            },
            "windows": {
                "command": "mkdir -p ${workspaceFolder}/OptiX"
            },
            "problemMatcher": []
        },
        {
            "label": "Browser - Get OptiX [Requires Registration]",
            "type": "shell",
            "linux": {
                "command": "open https://developer.nvidia.com/designworks/optix/download"
            },
            "osx": {
                "command": "open https://developer.nvidia.com/designworks/optix/download"
            },
            "windows": {
                "command": "start https://developer.nvidia.com/designworks/optix/download"
            },
            "problemMatcher": []
        },
        {
            "label": "Git - Clone Blender Sources",
            "type": "process",
            "command": "git",
            "args": [
                "clone",
                "git://git.blender.org/blender.git"
            ],
            "options": {
                "cwd": "${workspaceFolder}/Blender"
            },
            "problemMatcher": []
        },
        {
            "label": "Configure",
            "type": "shell",
            "linux": {
                "command": "cmake ${workspaceFolder}/Blender/blender -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON -DWITH_CYCLES_CUDA_BINARIES=ON -DWITH_CYCLES_DEVICE_OPTIX=ON -DOPTIX_ROOT_DIR=/NVIDIA-OptiX-SDK-7.1.0-linux64-x86_64",
                "options": {
                    "cwd": "${workspaceFolder}/build/linux"
                }
            },
            "osx": {
                "command": "cmake ${workspaceFolder}/Blender/blender -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON",
                "options": {
                    "cwd": "${workspaceFolder}/build/osx"
                }
            },
            "windows": {
                "command": "cmake ${workspaceFolder}/Blender/blender -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_MODULE=ON -DWITH_CYCLES_CUDA_BINARIES=ON -DWITH_CYCLES_DEVICE_OPTIX=ON -DOPTIX_ROOT_DIR=/NVIDIA-OptiX-SDK-7.1.0-linux64-x86_64",
                "options": {
                    "cwd": "${workspaceFolder}/build/windows"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "shell",
            "linux": {
                "command": "./make install",
                "options": {
                    "cwd": "${workspaceFolder}/build/linux"
                }
            },
            "osx": {
                "command": "./make install",
                "options": {
                    "cwd": "${workspaceFolder}/build/osx"
                }
            },
            "windows": {
                "command": "./make install",
                "options": {
                    "cwd": "${workspaceFolder}/build/windows"
                }
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Docker - Full Clean",
            "type": "process",
            "command": "docker",
            "args": [
                "system",
                "prune",
                "--all",
                "--force",
                "--volumes"
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Create Manylinux Wheel Build Environment",
            "type": "process",
            "command": "docker",
            "args": [
                "build",
                "--target",
                "blenderpy-manylinux-wheel-builder",
                "-t",
                "blenderpy/manylinux-wheel-builder",
                "-f",
                "${workspaceFolder}/.containers/Dockerfile",
                "."
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Create Windows Wheel Build Environment",
            "type": "process",
            "command": "docker",
            "args": [
                "build",
                "--target",
                "blenderpy-windows-wheel-builder",
                "-t",
                "blenderpy/windows-wheel-builder",
                "-f",
                "${workspaceFolder}/.containers/Dockerfile",
                "."
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete All Containers & Volumes",
            "type": "shell",
            "command": "docker rm -vf $(docker ps -a -q)",
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete All Images",
            "type": "shell",
            "command": "docker rmi -f $(docker images -a -q)",
            "problemMatcher": []
        },
        {
            "label": "Docker - Delete EVERYTHING",
            "type": "shell",
            "dependsOn": [
                "Docker - Delete All Containers & Volumes",
                "Docker - Delete All Images"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "BfGitTag",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "git ls-remote --tags git://git.blender.org/blender.git"
            }
        },
        {
            "id": "BfGitBranch",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "git ls-remote --heads git://git.blender.org/blender.git"
            }
        },
        {
            "id": "BfSvnTag",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "svn ls https://svn.blender.org/svnroot/bf-blender/tags/"
            }
        }
    ]
}